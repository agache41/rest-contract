<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~    Copyright 2022-2023  Alexandru Agache
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.github.agache41</groupId>
  <artifactId>quarkus-rest-contract</artifactId>
  <version>1.0.0</version>
  <name>REST Contract API and Data Access over JPA for Quarkus / JEE</name>
  <description>REST Contract is a JEE library targeted on creating generic REST Resource Services and Data Access Layers on top
        of JPA and CDI.
        It develops REST Services starting from the CRUD pattern and extends it by adding frequently needed methods to
        each domain entity.
        The idea behind it is that just by adding these generic services on each entity of your database you get a
        general 70 - 90% implementation of the services needed by the application,
        thus allowing the developer to focus just on the complex cases, in other words removing as much as "boilerplate
        code" as possible.
        And that comes with already developed test units that bring 100% coverage to all provided service methods.
        The library can be very easily extended to add more functionality by reusing and extending the provided
        components.
        Initially designed for Quarkus it can also be used in any JEE / CDI / JPA compliant environment.</description>
  <url>https://github.com/agache41/rest-contract/tree/main/quarkus-rest-contract</url>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Alexandru Agache</name>
      <email>agache41@yahoo.com</email>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:https://github.com/agache41/rest-contract.git</connection>
    <developerConnection>scm:git:https://github.com/agache41/rest-contract.git</developerConnection>
    <url>https://github.com/agache41/rest-contract.git</url>
  </scm>
  <dependencies>
    <dependency>
      <groupId>io.github.agache41</groupId>
      <artifactId>rest-contract-core</artifactId>
      <version>1.0.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>jakarta.enterprise.cdi-api</artifactId>
      <version>4.0.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.persistence</groupId>
      <artifactId>jakarta.persistence-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
      <version>3.0.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.logging</groupId>
      <artifactId>jboss-logging</artifactId>
      <version>3.5.3.Final</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
</project>
